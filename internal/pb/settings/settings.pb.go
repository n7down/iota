// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0-devel
// 	protoc        v3.11.4
// source: settings.proto

package settings_pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetBatCaveSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceID string `protobuf:"bytes,1,opt,name=DeviceID,proto3" json:"DeviceID,omitempty"`
}

func (x *GetBatCaveSettingsRequest) Reset() {
	*x = GetBatCaveSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBatCaveSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBatCaveSettingsRequest) ProtoMessage() {}

func (x *GetBatCaveSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBatCaveSettingsRequest.ProtoReflect.Descriptor instead.
func (*GetBatCaveSettingsRequest) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{0}
}

func (x *GetBatCaveSettingsRequest) GetDeviceID() string {
	if x != nil {
		return x.DeviceID
	}
	return ""
}

type GetBatCaveSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceID       string `protobuf:"bytes,1,opt,name=DeviceID,proto3" json:"DeviceID,omitempty"`
	DeepSleepDelay int32  `protobuf:"varint,2,opt,name=DeepSleepDelay,proto3" json:"DeepSleepDelay,omitempty"`
}

func (x *GetBatCaveSettingsResponse) Reset() {
	*x = GetBatCaveSettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBatCaveSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBatCaveSettingsResponse) ProtoMessage() {}

func (x *GetBatCaveSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBatCaveSettingsResponse.ProtoReflect.Descriptor instead.
func (*GetBatCaveSettingsResponse) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{1}
}

func (x *GetBatCaveSettingsResponse) GetDeviceID() string {
	if x != nil {
		return x.DeviceID
	}
	return ""
}

func (x *GetBatCaveSettingsResponse) GetDeepSleepDelay() int32 {
	if x != nil {
		return x.DeepSleepDelay
	}
	return 0
}

type SetBatCaveSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceID       string `protobuf:"bytes,1,opt,name=DeviceID,proto3" json:"DeviceID,omitempty"`
	DeepSleepDelay int32  `protobuf:"varint,2,opt,name=DeepSleepDelay,proto3" json:"DeepSleepDelay,omitempty"`
}

func (x *SetBatCaveSettingsRequest) Reset() {
	*x = SetBatCaveSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetBatCaveSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBatCaveSettingsRequest) ProtoMessage() {}

func (x *SetBatCaveSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBatCaveSettingsRequest.ProtoReflect.Descriptor instead.
func (*SetBatCaveSettingsRequest) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{2}
}

func (x *SetBatCaveSettingsRequest) GetDeviceID() string {
	if x != nil {
		return x.DeviceID
	}
	return ""
}

func (x *SetBatCaveSettingsRequest) GetDeepSleepDelay() int32 {
	if x != nil {
		return x.DeepSleepDelay
	}
	return 0
}

type SetBatCaveSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceID       string `protobuf:"bytes,1,opt,name=DeviceID,proto3" json:"DeviceID,omitempty"`
	DeepSleepDelay int32  `protobuf:"varint,2,opt,name=DeepSleepDelay,proto3" json:"DeepSleepDelay,omitempty"`
}

func (x *SetBatCaveSettingsResponse) Reset() {
	*x = SetBatCaveSettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetBatCaveSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBatCaveSettingsResponse) ProtoMessage() {}

func (x *SetBatCaveSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBatCaveSettingsResponse.ProtoReflect.Descriptor instead.
func (*SetBatCaveSettingsResponse) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{3}
}

func (x *SetBatCaveSettingsResponse) GetDeviceID() string {
	if x != nil {
		return x.DeviceID
	}
	return ""
}

func (x *SetBatCaveSettingsResponse) GetDeepSleepDelay() int32 {
	if x != nil {
		return x.DeepSleepDelay
	}
	return 0
}

var File_settings_proto protoreflect.FileDescriptor

var file_settings_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0b, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x70, 0x62, 0x22, 0x37, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x42, 0x61, 0x74, 0x43, 0x61, 0x76, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x22, 0x60, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x42, 0x61, 0x74,
	0x43, 0x61, 0x76, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44,
	0x12, 0x26, 0x0a, 0x0e, 0x44, 0x65, 0x65, 0x70, 0x53, 0x6c, 0x65, 0x65, 0x70, 0x44, 0x65, 0x6c,
	0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x44, 0x65, 0x65, 0x70, 0x53, 0x6c,
	0x65, 0x65, 0x70, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x22, 0x5f, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x42,
	0x61, 0x74, 0x43, 0x61, 0x76, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x44, 0x12, 0x26, 0x0a, 0x0e, 0x44, 0x65, 0x65, 0x70, 0x53, 0x6c, 0x65, 0x65, 0x70, 0x44, 0x65,
	0x6c, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x44, 0x65, 0x65, 0x70, 0x53,
	0x6c, 0x65, 0x65, 0x70, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x22, 0x60, 0x0a, 0x1a, 0x53, 0x65, 0x74,
	0x42, 0x61, 0x74, 0x43, 0x61, 0x76, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x44, 0x65, 0x65, 0x70, 0x53, 0x6c, 0x65, 0x65, 0x70,
	0x44, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x44, 0x65, 0x65,
	0x70, 0x53, 0x6c, 0x65, 0x65, 0x70, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x32, 0xdf, 0x01, 0x0a, 0x0f,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x65, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x42, 0x61, 0x74, 0x43, 0x61, 0x76, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x26, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x5f, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x74, 0x43, 0x61, 0x76, 0x65, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x61, 0x74, 0x43, 0x61, 0x76, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x42, 0x61, 0x74,
	0x43, 0x61, 0x76, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x26, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x42, 0x61,
	0x74, 0x43, 0x61, 0x76, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f,
	0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x42, 0x61, 0x74, 0x43, 0x61, 0x76, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0f, 0x5a,
	0x0d, 0x2e, 0x3b, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_settings_proto_rawDescOnce sync.Once
	file_settings_proto_rawDescData = file_settings_proto_rawDesc
)

func file_settings_proto_rawDescGZIP() []byte {
	file_settings_proto_rawDescOnce.Do(func() {
		file_settings_proto_rawDescData = protoimpl.X.CompressGZIP(file_settings_proto_rawDescData)
	})
	return file_settings_proto_rawDescData
}

var file_settings_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_settings_proto_goTypes = []interface{}{
	(*GetBatCaveSettingsRequest)(nil),  // 0: settings_pb.GetBatCaveSettingsRequest
	(*GetBatCaveSettingsResponse)(nil), // 1: settings_pb.GetBatCaveSettingsResponse
	(*SetBatCaveSettingsRequest)(nil),  // 2: settings_pb.SetBatCaveSettingsRequest
	(*SetBatCaveSettingsResponse)(nil), // 3: settings_pb.SetBatCaveSettingsResponse
}
var file_settings_proto_depIdxs = []int32{
	0, // 0: settings_pb.SettingsService.GetBatCaveSettings:input_type -> settings_pb.GetBatCaveSettingsRequest
	2, // 1: settings_pb.SettingsService.SetBatCaveSettings:input_type -> settings_pb.SetBatCaveSettingsRequest
	1, // 2: settings_pb.SettingsService.GetBatCaveSettings:output_type -> settings_pb.GetBatCaveSettingsResponse
	3, // 3: settings_pb.SettingsService.SetBatCaveSettings:output_type -> settings_pb.SetBatCaveSettingsResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_settings_proto_init() }
func file_settings_proto_init() {
	if File_settings_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_settings_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBatCaveSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBatCaveSettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetBatCaveSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetBatCaveSettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_settings_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_settings_proto_goTypes,
		DependencyIndexes: file_settings_proto_depIdxs,
		MessageInfos:      file_settings_proto_msgTypes,
	}.Build()
	File_settings_proto = out.File
	file_settings_proto_rawDesc = nil
	file_settings_proto_goTypes = nil
	file_settings_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SettingsServiceClient is the client API for SettingsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SettingsServiceClient interface {
	GetBatCaveSettings(ctx context.Context, in *GetBatCaveSettingsRequest, opts ...grpc.CallOption) (*GetBatCaveSettingsResponse, error)
	SetBatCaveSettings(ctx context.Context, in *SetBatCaveSettingsRequest, opts ...grpc.CallOption) (*SetBatCaveSettingsResponse, error)
}

type settingsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSettingsServiceClient(cc grpc.ClientConnInterface) SettingsServiceClient {
	return &settingsServiceClient{cc}
}

func (c *settingsServiceClient) GetBatCaveSettings(ctx context.Context, in *GetBatCaveSettingsRequest, opts ...grpc.CallOption) (*GetBatCaveSettingsResponse, error) {
	out := new(GetBatCaveSettingsResponse)
	err := c.cc.Invoke(ctx, "/settings_pb.SettingsService/GetBatCaveSettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *settingsServiceClient) SetBatCaveSettings(ctx context.Context, in *SetBatCaveSettingsRequest, opts ...grpc.CallOption) (*SetBatCaveSettingsResponse, error) {
	out := new(SetBatCaveSettingsResponse)
	err := c.cc.Invoke(ctx, "/settings_pb.SettingsService/SetBatCaveSettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SettingsServiceServer is the server API for SettingsService service.
type SettingsServiceServer interface {
	GetBatCaveSettings(context.Context, *GetBatCaveSettingsRequest) (*GetBatCaveSettingsResponse, error)
	SetBatCaveSettings(context.Context, *SetBatCaveSettingsRequest) (*SetBatCaveSettingsResponse, error)
}

// UnimplementedSettingsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSettingsServiceServer struct {
}

func (*UnimplementedSettingsServiceServer) GetBatCaveSettings(context.Context, *GetBatCaveSettingsRequest) (*GetBatCaveSettingsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBatCaveSettings not implemented")
}
func (*UnimplementedSettingsServiceServer) SetBatCaveSettings(context.Context, *SetBatCaveSettingsRequest) (*SetBatCaveSettingsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetBatCaveSettings not implemented")
}

func RegisterSettingsServiceServer(s *grpc.Server, srv SettingsServiceServer) {
	s.RegisterService(&_SettingsService_serviceDesc, srv)
}

func _SettingsService_GetBatCaveSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBatCaveSettingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SettingsServiceServer).GetBatCaveSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/settings_pb.SettingsService/GetBatCaveSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SettingsServiceServer).GetBatCaveSettings(ctx, req.(*GetBatCaveSettingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SettingsService_SetBatCaveSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetBatCaveSettingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SettingsServiceServer).SetBatCaveSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/settings_pb.SettingsService/SetBatCaveSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SettingsServiceServer).SetBatCaveSettings(ctx, req.(*SetBatCaveSettingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SettingsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "settings_pb.SettingsService",
	HandlerType: (*SettingsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBatCaveSettings",
			Handler:    _SettingsService_GetBatCaveSettings_Handler,
		},
		{
			MethodName: "SetBatCaveSettings",
			Handler:    _SettingsService_SetBatCaveSettings_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "settings.proto",
}

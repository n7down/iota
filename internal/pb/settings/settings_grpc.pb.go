// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package settings_pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SettingsServiceClient is the client API for SettingsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SettingsServiceClient interface {
	CreateBatCaveSetting(ctx context.Context, in *CreateBatCaveSettingRequest, opts ...grpc.CallOption) (*CreateBatCaveSettingResponse, error)
	GetBatCaveSetting(ctx context.Context, in *GetBatCaveSettingRequest, opts ...grpc.CallOption) (*GetBatCaveSettingResponse, error)
	UpdateBatCaveSetting(ctx context.Context, in *UpdateBatCaveSettingRequest, opts ...grpc.CallOption) (*UpdateBatCaveSettingResponse, error)
}

type settingsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSettingsServiceClient(cc grpc.ClientConnInterface) SettingsServiceClient {
	return &settingsServiceClient{cc}
}

func (c *settingsServiceClient) CreateBatCaveSetting(ctx context.Context, in *CreateBatCaveSettingRequest, opts ...grpc.CallOption) (*CreateBatCaveSettingResponse, error) {
	out := new(CreateBatCaveSettingResponse)
	err := c.cc.Invoke(ctx, "/settings_pb.SettingsService/CreateBatCaveSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *settingsServiceClient) GetBatCaveSetting(ctx context.Context, in *GetBatCaveSettingRequest, opts ...grpc.CallOption) (*GetBatCaveSettingResponse, error) {
	out := new(GetBatCaveSettingResponse)
	err := c.cc.Invoke(ctx, "/settings_pb.SettingsService/GetBatCaveSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *settingsServiceClient) UpdateBatCaveSetting(ctx context.Context, in *UpdateBatCaveSettingRequest, opts ...grpc.CallOption) (*UpdateBatCaveSettingResponse, error) {
	out := new(UpdateBatCaveSettingResponse)
	err := c.cc.Invoke(ctx, "/settings_pb.SettingsService/UpdateBatCaveSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SettingsServiceServer is the server API for SettingsService service.
// All implementations must embed UnimplementedSettingsServiceServer
// for forward compatibility
type SettingsServiceServer interface {
	CreateBatCaveSetting(context.Context, *CreateBatCaveSettingRequest) (*CreateBatCaveSettingResponse, error)
	GetBatCaveSetting(context.Context, *GetBatCaveSettingRequest) (*GetBatCaveSettingResponse, error)
	UpdateBatCaveSetting(context.Context, *UpdateBatCaveSettingRequest) (*UpdateBatCaveSettingResponse, error)
	mustEmbedUnimplementedSettingsServiceServer()
}

// UnimplementedSettingsServiceServer must be embedded to have forward compatible implementations.
type UnimplementedSettingsServiceServer struct {
}

func (*UnimplementedSettingsServiceServer) CreateBatCaveSetting(context.Context, *CreateBatCaveSettingRequest) (*CreateBatCaveSettingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBatCaveSetting not implemented")
}
func (*UnimplementedSettingsServiceServer) GetBatCaveSetting(context.Context, *GetBatCaveSettingRequest) (*GetBatCaveSettingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBatCaveSetting not implemented")
}
func (*UnimplementedSettingsServiceServer) UpdateBatCaveSetting(context.Context, *UpdateBatCaveSettingRequest) (*UpdateBatCaveSettingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateBatCaveSetting not implemented")
}
func (*UnimplementedSettingsServiceServer) mustEmbedUnimplementedSettingsServiceServer() {}

func RegisterSettingsServiceServer(s *grpc.Server, srv SettingsServiceServer) {
	s.RegisterService(&_SettingsService_serviceDesc, srv)
}

func _SettingsService_CreateBatCaveSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBatCaveSettingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SettingsServiceServer).CreateBatCaveSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/settings_pb.SettingsService/CreateBatCaveSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SettingsServiceServer).CreateBatCaveSetting(ctx, req.(*CreateBatCaveSettingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SettingsService_GetBatCaveSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBatCaveSettingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SettingsServiceServer).GetBatCaveSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/settings_pb.SettingsService/GetBatCaveSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SettingsServiceServer).GetBatCaveSetting(ctx, req.(*GetBatCaveSettingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SettingsService_UpdateBatCaveSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateBatCaveSettingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SettingsServiceServer).UpdateBatCaveSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/settings_pb.SettingsService/UpdateBatCaveSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SettingsServiceServer).UpdateBatCaveSetting(ctx, req.(*UpdateBatCaveSettingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SettingsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "settings_pb.SettingsService",
	HandlerType: (*SettingsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateBatCaveSetting",
			Handler:    _SettingsService_CreateBatCaveSetting_Handler,
		},
		{
			MethodName: "GetBatCaveSetting",
			Handler:    _SettingsService_GetBatCaveSetting_Handler,
		},
		{
			MethodName: "UpdateBatCaveSetting",
			Handler:    _SettingsService_UpdateBatCaveSetting_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "internal/pb/settings/settings.proto",
}
